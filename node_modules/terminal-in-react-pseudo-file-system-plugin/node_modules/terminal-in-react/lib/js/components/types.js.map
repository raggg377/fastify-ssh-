{"version":3,"sources":["../../../src/js/components/types.js"],"names":["objectOf","oneOfType","func","shape","options","arrayOf","name","string","description","defaultValue","any","method","bool","startState","oneOf","showActions","hideTopBar","allowTabs","msg","color","style","object","prompt","barColor","backgroundColor","commands","descriptions","watchConsoleLogging","commandPassThrough","promptSymbol","plugins","class","config","shortcuts","actionHandlers","handleClose","handleMinimise","handleMaximise","barShowing","tabsShowing","activeTab","instances","array","symbol","show","minimise","maximise","closeWindow","openWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize"],"mappings":"qeAEa,qBAAmB,UAAUA,QAAV,CAAmB,UAAUC,SAAV,CAAoB,CACrE,UAAUC,IAD2D,CAErE,UAAUC,KAAV,CAAgB,CACdC,QAAS,UAAUC,OAAV,CAAkB,UAAUF,KAAV,CAAgB,CACzCG,KAAM,UAAUC,MADyB,CAEzCC,YAAa,UAAUD,MAFkB,CAGzCE,aAAc,UAAUC,GAHiB,CAAhB,CAAlB,CADK,CAMdC,OAAQ,UAAUT,IANJ,CAAhB,CAFqE,CAApB,CAAnB,C,CAYnB,yBAAuB,UAAUF,QAAV,CAAmB,UAAUC,SAAV,CAAoB,CACzE,UAAUM,MAD+D,CAEzE,UAAUK,IAF+D,CAApB,CAAnB,C,CAKvB,sBAAoB,CAC/BC,WAAY,UAAUC,KAAV,2CADmB,CAE/BC,YAAa,UAAUH,IAFQ,CAG/BI,WAAY,UAAUJ,IAHS,CAI/BK,UAAW,UAAUL,IAJU,CAK/BM,IAAK,UAAUX,MALgB,CAM/BY,MAAO,UAAUZ,MANc,CAO/Ba,MAAO,UAAUC,MAPc,CAQ/BC,OAAQ,UAAUf,MARa,CAS/BgB,SAAU,UAAUhB,MATW,CAU/BiB,gBAAiB,UAAUjB,MAVI,CAW/BkB,UAX+B,CAY/BC,cAZ+B,CAa/BC,oBAAqB,UAAUf,IAbA,CAc/BgB,mBAAoB,UAAU3B,SAAV,CAAoB,CACtC,UAAUC,IAD4B,CAEtC,UAAUU,IAF4B,CAApB,CAdW,CAkB/BiB,aAAc,UAAUtB,MAlBO,CAmB/BuB,QAAS,UAAUzB,OAAV,CAAkB,UAAUJ,SAAV,CAAoB,CAC7C,UAAUC,IADmC,CAE7C,UAAUC,KAAV,CAAgB,CACd4B,MAAO,UAAU7B,IADH,CAEd8B,OAAQ,UAAUX,MAFJ,CAAhB,CAF6C,CAApB,CAAlB,CAnBsB,CA0B/BY,UAAW,UAAUjC,QAAV,CAAmB,UAAUA,QAAV,CAAmB,UAAUO,MAA7B,CAAnB,CA1BoB,CA2B/B2B,eAAgB,UAAU/B,KAAV,CAAgB,CAC9BgC,YAAa,UAAUjC,IADO,CAE9BkC,eAAgB,UAAUlC,IAFI,CAG9BmC,eAAgB,UAAUnC,IAHI,CAAhB,CA3Be,C,CAkCpB,yBAAuB,CAClCoC,WAAY,UAAU1B,IADY,CAElC2B,YAAa,UAAU3B,IAFW,CAGlC4B,UAAW,UAAUjC,MAHa,CAIlCkC,UAAW,UAAUC,KAJa,CAKlCC,OAAQ,UAAUpC,MALgB,CAMlCqC,KAAM,UAAUhC,IANkB,CAOlCiC,SAAU,UAAUjC,IAPc,CAQlCkC,SAAU,UAAUlC,IARc,CASlCmC,YAAa,UAAU7C,IATW,CAUlC8C,WAAY,UAAU9C,IAVY,CAWlC+C,eAAgB,UAAU/C,IAXQ,CAYlCgD,iBAAkB,UAAUhD,IAZM,CAalCiD,eAAgB,UAAUjD,IAbQ,CAclCkD,iBAAkB,UAAUlD,IAdM,CAelCmD,WAAY,UAAUnD,IAfY,CAgBlCoD,eAAgB,UAAUpD,IAhBQ,CAiBlCqD,eAAgB,UAAUrD,IAjBQ,C,CAoBvB,yBAAuB,CAClCW,WAAY,MADsB,CAElCG,aAFkC,CAGlCC,YAHkC,CAIlCF,cAJkC,CAKlCG,IAAK,EAL6B,CAMlCC,MAAO,OAN2B,CAOlCC,QAPkC,CAQlCE,OAAQ,OAR0B,CASlCC,SAAU,OATwB,CAUlCC,gBAAiB,OAViB,CAWlCC,WAXkC,CAYlCC,eAZkC,CAalCC,sBAbkC,CAclCC,qBAdkC,CAelCC,aAAc,GAfoB,CAgBlCC,UAhBkC,CAiBlCG,YAjBkC,C","file":"types.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const commandsPropType = PropTypes.objectOf(PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({\n    options: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      description: PropTypes.string,\n      defaultValue: PropTypes.any,\n    })),\n    method: PropTypes.func,\n  }),\n]));\n\nexport const descriptionsPropType = PropTypes.objectOf(PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.bool,\n]));\n\nexport const TerminalPropTypes = {\n  startState: PropTypes.oneOf(['minimised', 'maximised', 'open', 'closed']),\n  showActions: PropTypes.bool,\n  hideTopBar: PropTypes.bool,\n  allowTabs: PropTypes.bool,\n  msg: PropTypes.string,\n  color: PropTypes.string,\n  style: PropTypes.object, // eslint-disable-line\n  prompt: PropTypes.string,\n  barColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  commands: commandsPropType,\n  descriptions: descriptionsPropType,\n  watchConsoleLogging: PropTypes.bool,\n  commandPassThrough: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool,\n  ]),\n  promptSymbol: PropTypes.string,\n  plugins: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      class: PropTypes.func,\n      config: PropTypes.object,\n    }),\n  ])),\n  shortcuts: PropTypes.objectOf(PropTypes.objectOf(PropTypes.string)),\n  actionHandlers: PropTypes.shape({\n    handleClose: PropTypes.func,\n    handleMinimise: PropTypes.func,\n    handleMaximise: PropTypes.func,\n  }),\n};\n\nexport const TerminalContextTypes = {\n  barShowing: PropTypes.bool,\n  tabsShowing: PropTypes.bool,\n  activeTab: PropTypes.string,\n  instances: PropTypes.array,\n  symbol: PropTypes.string,\n  show: PropTypes.bool,\n  minimise: PropTypes.bool,\n  maximise: PropTypes.bool,\n  closeWindow: PropTypes.func,\n  openWindow: PropTypes.func,\n  minimiseWindow: PropTypes.func,\n  unminimiseWindow: PropTypes.func,\n  maximiseWindow: PropTypes.func,\n  unmaximiseWindow: PropTypes.func,\n  toggleShow: PropTypes.func,\n  toggleMaximise: PropTypes.func,\n  toggleMinimize: PropTypes.func,\n};\n\nexport const TerminalDefaultProps = {\n  startState: 'open',\n  hideTopBar: false,\n  allowTabs: true,\n  showActions: true,\n  msg: '',\n  color: 'green',\n  style: {},\n  prompt: 'green',\n  barColor: 'black',\n  backgroundColor: 'black',\n  commands: {},\n  descriptions: {},\n  watchConsoleLogging: true,\n  commandPassThrough: false,\n  promptSymbol: '>',\n  plugins: [],\n  shortcuts: {},\n};\n"]}