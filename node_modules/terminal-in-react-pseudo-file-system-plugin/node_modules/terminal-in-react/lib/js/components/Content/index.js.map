{"version":3,"sources":["../../../../src/js/components/Content/index.js"],"names":["state","summary","promptPrefix","history","historyCounter","input","keyInputs","canScroll","componentWillMount","context","instances","find","index","props","id","setState","oldData","componentDidMount","focusInput","unregister","register","keys","length","handleChange","target","value","key","dontShowCommand","componentDidUpdate","inputWrapper","scrollIntoView","setScrollPosition","setTimeout","contentWrapper","scrollTop","com","focus","handleKeyPress","handlerKeyPress","handleOuterKeypress","indexOf","document","activeElement","char","symbol","maximise","activeTab","barShowing","tabsShowing","map","maxWidth","maxHeight","overflowY","displayName","propTypes","string","object","func","isRequired","defaultProps","contextTypes","bool","array"],"mappings":"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","file":"index.js","sourcesContent":["import React, {Component} from 'react'; // eslint-disable-line\nimport PropTypes from 'prop-types';\nimport whatkey, { unprintableKeys } from 'whatkey';\nimport {\n  ContainerMain, ContainerContent, Holder,\n  Input, InputArea, MainInput,\n  OutputLine, PreOutputLine, Prompt,\n} from './styled-elements';\n\nclass Content extends Component {\n  static displayName = 'Content';\n\n  static propTypes = {\n    id: PropTypes.string,\n    oldData: PropTypes.object, // eslint-disable-line\n    register: PropTypes.func,\n    handleChange: PropTypes.func,\n    handlerKeyPress: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    oldData: {},\n  };\n\n  static contextTypes = {\n    symbol: PropTypes.string,\n    maximise: PropTypes.bool,\n    instances: PropTypes.array,\n    activeTab: PropTypes.string,\n    barShowing: PropTypes.bool,\n    tabsShowing: PropTypes.bool,\n  };\n\n  state = {\n    summary: [],\n    promptPrefix: '',\n    history: [],\n    historyCounter: 0,\n    input: [],\n    keyInputs: [],\n    canScroll: true,\n  };\n\n  componentWillMount = () => {\n    const data = this.context.instances.find(i => i.index === this.props.id);\n    if (data) {\n      this.setState(data.oldData);\n    }\n  };\n\n  componentDidMount = () => {\n    this.focusInput();\n    const data = this.context.instances.find(i => i.index === this.props.id);\n    this.unregister = this.props.register(this);\n    if (!data || Object.keys(data.oldData).length === 0) {\n      this.handleChange({ target: { value: 'show' }, key: 'Enter', dontShowCommand: true });\n    }\n  };\n\n  // Adjust scrolling\n  componentDidUpdate = () => {\n    if (this.inputWrapper !== null) {\n      this.inputWrapper.scrollIntoView(false);\n    }\n  };\n\n  componentWillUnmount() {\n    this.unregister(this.state);\n  }\n\n  setScrollPosition = (pos) => {\n    setTimeout(() => {\n      if (this.contentWrapper !== null) {\n        this.contentWrapper.scrollTop = pos;\n      }\n    }, 50);\n  };\n\n  focusInput = () => {\n    if (this.com !== null) {\n      this.com.focus();\n    }\n  };\n\n  handleChange = (e) => {\n    this.props.handleChange(this, e);\n  }\n\n  handleKeyPress = (e) => {\n    this.props.handlerKeyPress(this, e, this.com);\n  }\n\n  handleOuterKeypress = (e) => {\n    const key = whatkey(e).key;\n    const actionKeys = ['up', 'down', 'left', 'right', 'enter'];\n    if (unprintableKeys.indexOf(key) < 0) {\n      if (document.activeElement !== this.com) {\n        this.com.focus();\n        this.com.value += whatkey(e).char;\n      }\n    } else if (actionKeys.indexOf(key) > -1) {\n      this.com.focus();\n    }\n  }\n\n  render() {\n    const { id } = this.props;\n    const { symbol, maximise, activeTab, barShowing, tabsShowing } = this.context;\n\n    if (id !== activeTab) {\n      return null;\n    }\n\n    const output = this.state.summary.map((content, i) => {\n      if (typeof content === 'string' && content.length === 0) {\n        return <OutputLine key={i}>&nbsp;</OutputLine>;\n      }\n      return <PreOutputLine key={i}>{content}</PreOutputLine>;\n    });\n\n    let toSubtract = 30;\n    if (!barShowing) {\n      toSubtract -= 30;\n    }\n    if (tabsShowing) {\n      toSubtract += 30;\n    }\n\n    return (\n      <ContainerMain\n        style={{\n          ...(maximise\n            ? { maxWidth: '100%', maxHeight: `calc(100% - ${toSubtract}px)` }\n            : {}),\n          ...(this.state.canScroll\n            ? { overflowY: 'auto' }\n            : { overflowY: 'hidden' }),\n        }}\n        tabIndex=\"0\"\n        onKeyUp={this.handleOuterKeypress}\n        innerRef={ctw => (this.contentWrapper = ctw)}\n      >\n        <Holder>\n          <ContainerContent>\n            <InputArea>\n              {output}\n              <Input\n                innerRef={elm => (this.inputWrapper = elm)}\n              >\n                <Prompt>\n                  {this.state.promptPrefix + symbol}\n                </Prompt>\n                <MainInput\n                  type=\"text\"\n                  tabIndex=\"-1\"\n                  innerRef={com => (this.com = com)}\n                  onKeyPress={this.handleChange}\n                  onKeyDown={this.handleKeyPress}\n                />\n              </Input>\n            </InputArea>\n          </ContainerContent>\n        </Holder>\n      </ContainerMain>\n    );\n  }\n}\n\nexport default Content;\n"]}