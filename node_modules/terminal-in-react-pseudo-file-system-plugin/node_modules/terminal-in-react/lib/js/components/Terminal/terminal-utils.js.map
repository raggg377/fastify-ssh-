{"version":3,"sources":["../../../../src/js/components/Terminal/terminal-utils.js"],"names":["pluginMap","map","class","config","forEach","uuidv4","replace","random","toString","getShortcuts","Object","keys","toLowerCase","split","modCommands","options","Error","parse","name","help","version","method","needsInstance"],"mappings":"oYAKgBA,S,CAAT,aAAyC,CAC9C,MAAO,GAAQC,GAAR,CAAY,WAAY,CAO7B,MANsB,UAAlB,UAMJ,GALE,EAAS,CACPC,OADO,CAEPC,aAFO,CAKX,GACD,CARM,EAQJC,OARI,CAQI,kBAAa,GAAY,EAAUF,KAAtB,CAA6B,EAAUC,MAAvC,CAAb,CARJ,CASR,C,GAEeE,M,CAAT,UAAkB,CACvB,MAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,CAAwD,WAAO,CACpE,GAAM,GAAyB,CAArB,CAAgB,EAAhB,MAAKC,MAAL,EAAV,CACM,EAAU,GAAN,OAAiB,KAD3B,CAEA,MAAO,GAAEC,QAAF,CAAW,EAAX,CACR,CAJM,CAKR,C,GAEeC,Y,CAAT,aAAsC,CAc3C,MAbmB,QAAf,2CAaJ,EAZEC,OAAOC,IAAP,IAAiBP,OAAjB,CAAyB,WAAS,CAChC,GAAM,GAAQ,EAAIQ,WAAJ,GAAkBN,OAAlB,CAA0B,KAA1B,CAAiC,EAAjC,EAAqCO,KAArC,CAA2C,GAA3C,CAAd,CACA,EAAMT,OAAN,CAAc,WAAY,CACpB,KADoB,GAEtB,SAEK,IAFL,CAFsB,CAOzB,CAPD,CAQD,CAVD,CAYF,EACD,C,GAEeU,W,CAAT,WAA+B,CACpC,GAAM,KAAN,CAmCA,MAjCAJ,QAAOC,IAAP,IAAsBP,OAAtB,CAA8B,WAAU,CACtC,GAAI,KAAJ,CACM,EAAa,IADnB,CAEI,GAFJ,CAGI,EAAQ,qBAHZ,CAIA,GAA0B,WAAtB,UAAJ,CAAuC,CACrC,GAA0B,QAAtB,2CAAJ,CAAoC,CAClC,GAAM,GAAM,aAAZ,CACA,GAAkC,WAA9B,QAAO,GAAWW,OAAtB,CACE,GAAI,CACF,EAAIA,OAAJ,CAAY,EAAWA,OAAvB,CACD,CAAC,QAAU,CACV,KAAM,IAAIC,MAAJ,CAAU,kCAAV,CACP,CAEH,EAAQ,kBACN,GAAIC,KAAJ,GAAa,CACXC,MADW,CAEXC,OAFW,CAGXC,UAHW,CAAb,CADM,CAT0B,CAelC,EAAS,EAAWC,MAfc,CAgBlC,EAAgB,EAAWC,aAAX,IACjB,CAED,KAAoB,CAClBL,OADkB,CAElBI,QAFkB,CAGlBC,eAHkB,CAKrB,CACF,CA/BD,CAiCA,EACD,C,yaA5EY,OAAK,a","file":"terminal-utils.js","sourcesContent":["import Command from '../../args/index';\nimport { getOs } from '../../utils';\n\nexport const os = getOs();\n\nexport function pluginMap(plugins, eachHandler) {\n  return plugins.map((plugin) => {\n    if (typeof plugin === 'function') {\n      plugin = {\n        class: plugin,\n        config: undefined,\n      };\n    }\n    return plugin;\n  }).forEach(pluginObj => eachHandler(pluginObj.class, pluginObj.config));\n}\n\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0; // eslint-disable-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3 | 0x8); // eslint-disable-line\n    return v.toString(16);\n  });\n}\n\nexport function getShortcuts(shortcuts, obj) {\n  if (typeof obj === 'object') {\n    Object.keys(obj).forEach((key) => {\n      const split = key.toLowerCase().replace(/\\s/g, '').split(',');\n      split.forEach((osName) => {\n        if (osName === os) {\n          shortcuts = {\n            ...shortcuts,\n            ...obj[key],\n          };\n        }\n      });\n    });\n  }\n  return shortcuts;\n}\n\nexport function modCommands(commands) {\n  const newCommands = {};\n\n  Object.keys(commands).forEach((name) => {\n    let needsInstance = false;\n    const definition = commands[name];\n    let method = definition;\n    let parse = i => i;\n    if (typeof definition !== 'undefined') {\n      if (typeof definition === 'object') {\n        const cmd = new Command();\n        if (typeof definition.options !== 'undefined') {\n          try {\n            cmd.options(definition.options);\n          } catch (e) {\n            throw new Error('options for command wrong format');\n          }\n        }\n        parse = i =>\n          cmd.parse(i, {\n            name,\n            help: true,\n            version: false,\n          });\n        method = definition.method;\n        needsInstance = definition.needsInstance || false;\n      }\n\n      newCommands[name] = {\n        parse,\n        method,\n        needsInstance,\n      };\n    }\n  });\n\n  return newCommands;\n}\n"]}