{"ast":null,"code":"var _jsxFileName = \"/home/veldora/Desktop/Lightspeed/ssh/react-ssh-terminal-master/src/ssh-comm.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nconst ws = new W3CWebSocket(\"ws://localhost:3002\", 'echo-protocol');\n\nconst ShhComm = () => {\n  const [commend, setCommend] = useState('');\n  const [commendList, setCommendList] = useState([]);\n  useEffect(() => {\n    ws.onmessage = msg => {\n      setCommendList(currentState => [...currentState, JSON.parse(msg.data)]);\n    };\n  }, []);\n\n  const onSend = () => {\n    let data = {\n      method: 'command',\n      command: commend\n    };\n    ws.send(JSON.stringify(data));\n    setCommend('');\n  };\n\n  console.log('commendList', commendList);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"terminal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, commendList.map((list, i) => {\n    return React.createElement(\"div\", {\n      id: \"history\",\n      style: {\n        textAlign: 'left'\n      },\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, list.data);\n  }), React.createElement(\"div\", {\n    class: \"line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: \"path\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\xA0>\\xA0\"), React.createElement(\"input\", {\n    type: \"text\",\n    value: commend,\n    onChange: e => setCommend(e.target.value),\n    placeholder: \"Enter your command\",\n    onKeyPress: event => {\n      if (event.key === 'Enter') {\n        onSend();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nexport default ShhComm;","map":{"version":3,"sources":["/home/veldora/Desktop/Lightspeed/ssh/react-ssh-terminal-master/src/ssh-comm.js"],"names":["React","useEffect","useState","w3cwebsocket","W3CWebSocket","Button","Form","FormGroup","Label","Input","FormText","ws","ShhComm","commend","setCommend","commendList","setCommendList","onmessage","msg","currentState","JSON","parse","data","onSend","method","command","send","stringify","console","log","map","list","i","textAlign","e","target","value","event","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,WAAP;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,QAAhD,QAAgE,YAAhE;AACA,MAAMC,EAAE,GAAG,IAAIP,YAAJ,CAAiB,qBAAjB,EAAwC,eAAxC,CAAX;;AAEA,MAAMQ,OAAO,GAAC,MAAK;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,EAAE,CAACM,SAAH,GAAeC,GAAG,IAAG;AACnBF,MAAAA,cAAc,CAAEG,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAiBC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAjB,CAAnB,CAAd;AACD,KAFD;AAGD,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,MAAM,GAAG,MAAI;AACjB,QAAID,IAAI,GAAG;AAACE,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,OAAO,EAAEZ;AAA7B,KAAX;AACEF,IAAAA,EAAE,CAACe,IAAH,CAAQN,IAAI,CAACO,SAAL,CAAeL,IAAf,CAAR;AACAR,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAJD;;AAMAc,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bd,WAA3B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,WAAW,CAACe,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAW;AACtB,WAAO;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAzB;AAA8C,MAAA,GAAG,EAAED,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDD,IAAI,CAACT,IAA5D,CAAP;AACL,GAFA,CADD,EAIJ;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACG,IAAA,KAAK,EAAET,OADV;AAEG,IAAA,QAAQ,EAAGqB,CAAD,IAAMpB,UAAU,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAGG,IAAA,WAAW,EAAC,oBAHf;AAIG,IAAA,UAAU,EAAEC,KAAK,IAAI;AAChB,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBf,QAAAA,MAAM;AACP;AACF,KARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJI,CAXF,CADF;AAgCD,CAlDD;;AAoDA,eAAeX,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nconst ws = new W3CWebSocket(\"ws://localhost:3002\", 'echo-protocol');\n\nconst ShhComm=()=> {\n  const [commend, setCommend] = useState('')\n  const [commendList, setCommendList] = useState([])\n\n  useEffect(()=>{\n    ws.onmessage = msg =>{\n      setCommendList((currentState)=> ([...currentState,JSON.parse(msg.data)]))\n    };\n  },[]);\n\n  const onSend = ()=>{\n    let data = {method: 'command', command: commend};\n      ws.send(JSON.stringify(data));\n      setCommend('')\n  }\n\n  console.log('commendList', commendList)\n\n  return (\n    <div className=\"App\">\n      {/* <Form inline>\n      <FormGroup>\n        <Label for=\"exampleEmail\" className=\"mr-sm-2\">Enter your command</Label>\n        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" value={commend} onChange={(e)=> setCommend(e.target.value)} placeholder=\"with a placeholder\" />\n      </FormGroup>\n      <Button onClick={onSend}>Submit</Button>\n      </Form>\n      {commendList.map((list, i)=>{\n        return <p key={i}>{list.data}</p>\n      })} */}\n      <div class=\"terminal\">\n      {commendList.map((list, i)=>{\n            return <div id=\"history\" style={{textAlign: 'left'}} key={i}>{list.data}</div>\n      })}\n  <div class=\"line\">\n    <span id=\"path\">&nbsp;>&nbsp;</span>\n    <input type=\"text\"\n       value={commend}\n       onChange={(e)=> setCommend(e.target.value)}\n       placeholder=\"Enter your command\"\n       onKeyPress={event => {\n            if (event.key === 'Enter') {\n              onSend()\n            }\n          }}  \n        />\n    </div>\n  </div>\n  </div>\n  );\n}\n\nexport default ShhComm;\n"]},"metadata":{},"sourceType":"module"}